# Generated by Django 5.1.2 on 2025-08-23 23:09

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BTCFDUSDTick",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.FloatField(null=True)),
                ("rsi_5", models.FloatField(null=True)),
                ("rsi_7", models.FloatField(null=True)),
                ("rsi_12", models.FloatField(null=True)),
                ("ema_short", models.FloatField(null=True)),
                ("ema_mid", models.FloatField(null=True)),
                ("ema_long", models.FloatField(null=True)),
                ("ema_xlong", models.FloatField(null=True)),
                ("macd_line", models.FloatField(null=True)),
                ("macd_hist", models.FloatField(null=True)),
                ("macd_signal", models.FloatField(null=True)),
                ("bb_upper", models.FloatField(null=True)),
                ("bb_middle", models.FloatField(null=True)),
                ("bb_lower", models.FloatField(null=True)),
                ("timestamp", models.DateTimeField(db_index=True, unique=True)),
            ],
            options={
                "db_table": '"duckdb_transfers"."btcfdusd_ticks"',
            },
        ),
        migrations.CreateModel(
            name="DataRun",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="data_run_id",
                    ),
                ),
                (
                    "com_or_us",
                    models.CharField(
                        choices=[("com", "com"), ("us", "us")], max_length=3
                    ),
                ),
                ("is_testnet", models.BooleanField()),
                ("base_asset", models.CharField(max_length=7)),
                ("quote_asset", models.CharField(max_length=7)),
                ("window_length", models.IntegerField(default=150)),
                (
                    "run_type",
                    models.CharField(
                        choices=[("training", "training"), ("trading", "trading")],
                        max_length=8,
                        null=True,
                    ),
                ),
            ],
            options={
                "db_table": '"public"."data_runs"',
            },
        ),
        migrations.CreateModel(
            name="TickData",
            fields=[
                ("price", models.FloatField(null=True)),
                ("rsi_5", models.FloatField(null=True)),
                ("rsi_7", models.FloatField(null=True)),
                ("rsi_12", models.FloatField(null=True)),
                ("ema_short", models.FloatField(null=True)),
                ("ema_mid", models.FloatField(null=True)),
                ("ema_long", models.FloatField(null=True)),
                ("ema_xlong", models.FloatField(null=True)),
                ("macd_line", models.FloatField(null=True)),
                ("macd_hist", models.FloatField(null=True)),
                ("macd_signal", models.FloatField(null=True)),
                ("bb_upper", models.FloatField(null=True)),
                ("bb_middle", models.FloatField(null=True)),
                ("bb_lower", models.FloatField(null=True)),
                (
                    "id",
                    models.UUIDField(
                        db_index=True,
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="tick_data_id",
                    ),
                ),
                ("timestamp", models.DateTimeField(db_index=True, unique=True)),
                (
                    "data_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.datarun"
                    ),
                ),
            ],
            options={
                "db_table": '"public"."tick_data"',
            },
        ),
        migrations.CreateModel(
            name="TickProbabilities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("buy_prob", models.FloatField(null=True)),
                ("hold_prob", models.FloatField(null=True)),
                ("sell_prob", models.FloatField(null=True)),
                (
                    "tick_data",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.tickdata"
                    ),
                ),
            ],
            options={
                "db_table": '"public"."tick_probabilities"',
            },
        ),
        migrations.CreateModel(
            name="TradingSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="trading_session_id",
                    ),
                ),
                ("blocking", models.BooleanField()),
                (
                    "data_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.datarun"
                    ),
                ),
            ],
            options={
                "db_table": '"public"."trading_sessions"',
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="single_buy_cycle_id",
                    ),
                ),
                (
                    "side",
                    models.CharField(
                        choices=[("BUY", "BUY"), ("SELL", "SELL")],
                        max_length=8,
                        null=True,
                    ),
                ),
                ("strike_price", models.FloatField()),
                (
                    "tick_data",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.tickdata"
                    ),
                ),
                (
                    "trading_session",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.tradingsession",
                    ),
                ),
            ],
            options={
                "db_table": '"public"."transactions"',
            },
        ),
    ]
