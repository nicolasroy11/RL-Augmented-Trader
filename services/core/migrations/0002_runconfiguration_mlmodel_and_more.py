# Generated by Django 5.1.2 on 2025-08-27 20:40

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="RunConfiguration",
            fields=[
                (
                    "id",
                    models.UUIDField(editable=False, primary_key=True, serialize=False),
                ),
                ("name", models.CharField(max_length=150, null=True)),
                ("description", models.CharField(max_length=250, null=True)),
            ],
            options={
                "db_table": '"public"."run_configurations"',
            },
        ),
        migrations.CreateModel(
            name="MLModel",
            fields=[
                (
                    "id",
                    models.UUIDField(editable=False, primary_key=True, serialize=False),
                ),
                (
                    "feature_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.featureset",
                    ),
                ),
                (
                    "run_configuration",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="core.runconfiguration",
                    ),
                ),
            ],
            options={
                "db_table": '"public"."ml_models"',
                "db_table_comment": "The id on this table will be the name of the pickle file.",
            },
        ),
        migrations.AddField(
            model_name="tradingsession",
            name="run_configuration",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="core.runconfiguration",
            ),
        ),
        migrations.CreateModel(
            name="TrainingSession",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        primary_key=True,
                        serialize=False,
                        verbose_name="training_session_id",
                    ),
                ),
                ("blocking", models.BooleanField()),
                (
                    "data_run",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.datarun"
                    ),
                ),
                (
                    "feature_set",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.featureset",
                    ),
                ),
                (
                    "run_configuration",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.runconfiguration",
                    ),
                ),
            ],
            options={
                "db_table": '"public"."training_sessions"',
            },
        ),
        migrations.CreateModel(
            name="Hyperparameter",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("key", models.CharField(max_length=100)),
                ("value", models.CharField(max_length=255)),
                (
                    "ml_model",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="hyperparameters",
                        to="core.mlmodel",
                    ),
                ),
            ],
            options={
                "db_table": '"public"."hyperparameters"',
                "unique_together": {("ml_model", "key")},
            },
        ),
    ]
